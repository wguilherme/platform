#!/bin/bash

# Home Assistant + ESPHome Docker Startup Script
# Script para inicializar o ambiente Docker do Home Assistant

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para print colorido
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Banner
echo "=================================================="
echo "üè† Home Assistant + ESPHome Docker Setup"
echo "Hardware Lab v3 - Controle de Garagem"
echo "=================================================="
echo ""

# Verificar se Docker est√° instalado
print_status "Verificando instala√ß√£o do Docker..."
if ! command -v docker &> /dev/null; then
    print_error "Docker n√£o encontrado. Instale o Docker primeiro."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    print_error "Docker Compose n√£o encontrado. Instale o Docker Compose primeiro."
    exit 1
fi

print_success "Docker e Docker Compose encontrados"

# Verificar se est√° no diret√≥rio correto
if [[ ! -f "docker-compose.yml" ]]; then
    print_error "Arquivo docker-compose.yml n√£o encontrado."
    print_error "Execute este script do diret√≥rio devops/docker/"
    exit 1
fi

# Verificar se o arquivo .env existe
if [[ ! -f ".env" ]]; then
    print_warning "Arquivo .env n√£o encontrado, usando valores padr√£o"
fi

# Verificar se a pasta homeassistant existe
if [[ ! -d "./homeassistant" ]]; then
    print_error "Pasta homeassistant n√£o encontrada em ./homeassistant"
    print_error "Certifique-se de que a estrutura do projeto est√° correta"
    exit 1
fi

# Verificar se a pasta esphome existe
if [[ ! -d "../../esphome" ]]; then
    print_error "Pasta esphome n√£o encontrada em ../../esphome"
    print_error "Certifique-se de que a estrutura do projeto est√° correta"
    exit 1
fi

print_success "Estrutura de arquivos verificada"

# Parar containers existentes se estiverem rodando
print_status "Parando containers existentes..."
docker-compose down 2>/dev/null || true

# Fazer pull das imagens mais recentes
print_status "Baixando imagens mais recentes..."
docker-compose pull

# Iniciar os servi√ßos
print_status "Iniciando servi√ßos Home Assistant + ESPHome..."
docker-compose up -d

# Aguardar os servi√ßos ficarem dispon√≠veis
print_status "Aguardando servi√ßos ficarem dispon√≠veis..."
sleep 15

# Verificar se os containers est√£o rodando
if docker-compose ps | grep -q "Up"; then
    print_success "Home Assistant e ESPHome iniciados com sucesso!"
    echo ""
    echo "=================================================="
    echo "üéâ Setup Completo!"
    echo "=================================================="
    echo ""
    echo "üè† Home Assistant:"
    echo "   ‚Ä¢ Local: http://localhost:8123"
    echo "   ‚Ä¢ Rede:  http://$(hostname -I | awk '{print $1}'):8123"
    echo ""
    echo "üìä ESPHome Dashboard:"
    echo "   ‚Ä¢ Local: http://localhost:6052"
    echo "   ‚Ä¢ Rede:  http://$(hostname -I | awk '{print $1}'):6052"
    echo "   ‚Ä¢ Usu√°rio: esphome"
    echo "   ‚Ä¢ Senha:  esphome123"
    echo ""
    echo "üìã Comandos √∫teis:"
    echo "   ‚Ä¢ Ver logs HA:     docker-compose logs -f homeassistant"
    echo "   ‚Ä¢ Ver logs ESPHome: docker-compose logs -f esphome"
    echo "   ‚Ä¢ Parar servi√ßos:   docker-compose down"
    echo "   ‚Ä¢ Reiniciar:        docker-compose restart"
    echo ""
    echo "üì± Dispositivo ESP32:"
    echo "   ‚Ä¢ Nome: garagem-esp32"
    DEVICE_IP=$(ping -c 1 garagem-esp32.local 2>/dev/null | grep -oP '(?<=\()[^)]+' | head -1 || echo 'N√£o encontrado')
    echo "   ‚Ä¢ IP:   $DEVICE_IP"
    echo "   ‚Ä¢ URL:  http://garagem-esp32.local"
    echo ""
    echo "üîß Pr√≥ximos passos:"
    echo "   1. Acesse o Home Assistant e complete a configura√ß√£o inicial"
    echo "   2. V√° em Settings > Devices & Services > Add Integration"
    echo "   3. Procure por 'ESPHome' e adicione o dispositivo 'garagem-esp32.local'"
    echo "   4. Use a senha da API: 'esp32_garagem_api'"
    echo ""
    echo "=================================================="
else
    print_error "Falha ao iniciar os servi√ßos"
    print_status "Verificando logs..."
    docker-compose logs --tail=20
    exit 1
fi