---
# Nginx Ingress Controller configuration
nginx_ingress_version: "4.9.0"
nginx_ingress_namespace: "ingress-nginx"

# Helm configuration
nginx_ingress_helm_repo_name: "ingress-nginx"
nginx_ingress_helm_repo_url: "https://kubernetes.github.io/ingress-nginx"
nginx_ingress_helm_chart: "ingress-nginx"
nginx_ingress_helm_release_name: "ingress-nginx"

# Service configuration
nginx_ingress_service_type: "LoadBalancer"  # LoadBalancer, NodePort, or ClusterIP
nginx_ingress_service_nodePorts:
  http: 30080
  https: 30443

# Controller configuration
nginx_ingress_controller_replicas: 1
nginx_ingress_default_backend_enabled: true

# Raspberry Pi specific settings
nginx_ingress_controller_resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 90Mi

# Additional controller configuration
nginx_ingress_controller_config:
  compute-full-forwarded-for: "true"
  use-forwarded-headers: "true"
  log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id'

# Metrics
nginx_ingress_metrics_enabled: true
nginx_ingress_metrics_port: 10254

# Wait for deployment
nginx_ingress_wait_for_ready: true
nginx_ingress_wait_timeout: 300