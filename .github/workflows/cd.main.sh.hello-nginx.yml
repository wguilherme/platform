name: Deploy to K3s

on:
  push:
    branches: [main]
    paths: ["rpi/deployments/nginx-hello2/**"]

jobs:
  deploy:
    runs-on: self-hosted
    env:
      KUBECONFIG: /home/wguilherme/.kube/config

    steps:
      - uses: actions/checkout@v2

      - name: Update kubeconfig
        run: |
          sudo cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          sudo chmod 600 $HOME/.kube/config

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Deploy to K3s
        run: |
          DEPLOY_MESSAGE="Hello World! Deployed on ${{ steps.date.outputs.date }} (Commit: ${{ github.sha }})"

          # Delete existing pod if it exists
          kubectl delete pod hello-world -n cd --ignore-not-found

          cat <<EOF | kubectl apply -n cd -f -
          apiVersion: v1
          kind: Pod
          metadata:
            name: hello-world
            labels:
              app: hello-world
          spec:
            containers:
            - name: hello-world
              image: nginx:alpine
              ports:
              - containerPort: 80
              command: ["/bin/sh", "-c"]
              args:
              - |
                echo "$DEPLOY_MESSAGE" > /usr/share/nginx/html/index.html
                nginx -g 'daemon off;'
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-world
          spec:
            type: ClusterIP
            selector:
              app: hello-world
            ports:
            - port: 80
              targetPort: 80
          EOF

          kubectl wait --for=condition=Ready pod/hello-world -n cd --timeout=60s

          echo "Service created as ClusterIP in namespace cd"
          echo "To view resources, use: kubectl get all -n cd"
          echo "To access the service from within the cluster, use: http://hello-world.cd.svc.cluster.local"
